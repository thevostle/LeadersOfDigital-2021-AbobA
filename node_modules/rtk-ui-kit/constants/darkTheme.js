'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true,
});

exports.darkTheme = void 0;

var themeUtils_1 = require('../utils/themeUtils');

var greyScale_1 = require('./greyScale');

var baseColors = {
  primary1: function primary1(alpha) {
    if (alpha === void 0) {
      alpha = themeUtils_1.defaultAlpha;
    }

    return themeUtils_1.getColor(alpha, '148,102,255');
  },
  primary2: function primary2(alpha) {
    if (alpha === void 0) {
      alpha = themeUtils_1.defaultAlpha;
    }

    return themeUtils_1.getColor(alpha, '255,94,45');
  },
  secondary1: function secondary1(alpha) {
    if (alpha === void 0) {
      alpha = themeUtils_1.defaultAlpha;
    }

    return themeUtils_1.getColor(alpha, '22,217,166');
  },
  secondary2: function secondary2(alpha) {
    if (alpha === void 0) {
      alpha = themeUtils_1.defaultAlpha;
    }

    return themeUtils_1.getColor(alpha, '64,162,255');
  },
};

var systemColors = {
  success: function success(alpha) {
    if (alpha === void 0) {
      alpha = themeUtils_1.defaultAlpha;
    }

    return themeUtils_1.getColor(alpha, '38,218,114');
  },
  warning: function warning(alpha) {
    if (alpha === void 0) {
      alpha = themeUtils_1.defaultAlpha;
    }

    return themeUtils_1.getColor(alpha, '255,202,0');
  },
  error: function error(alpha) {
    if (alpha === void 0) {
      alpha = themeUtils_1.defaultAlpha;
    }

    return themeUtils_1.getColor(alpha, '255,71,71');
  },
  info: function info(alpha) {
    if (alpha === void 0) {
      alpha = themeUtils_1.defaultAlpha;
    }

    return themeUtils_1.getColor(alpha, '64,117,255');
  },
};

var transparent = {
  100: 'rgba(255,255,255,0.9)',
  75: 'rgba(255,255,255,0.6)',
  50: 'rgba(255,255,255,0.4)',
  25: 'rgba(255,255,255,0.25)',
  10: 'rgba(255,255,255,0.1)',
  5: 'rgba(255,255,255,0.06)',
};

var shadows = {
  bottomS: '0px 0px 8px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.2)',
  bottomM: '0px 0px 16px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.2)',
  bottomL: '0px 0px 20px rgba(0, 0, 0, 0.1), 0px 12px 20px rgba(0, 0, 0, 0.2)',
  bottomXL: '0px 0px 32px rgba(0, 0, 0, 0.1), 0px 32px 32px rgba(0, 0, 0, 0.2)',
  topS: '0px 0px 8px rgba(0, 0, 0, 0.1), 0px -2px 4px rgba(0, 0, 0, 0.2)',
  topM: '0px 0px 16px rgba(0, 0, 0, 0.1), 0px -4px 8px rgba(0, 0, 0, 0.2)',
  topL: '0px 0px 20px rgba(0, 0, 0, 0.1), 0px -12px 20px rgba(0, 0, 0, 0.2)',
  topXL: '0px 0px 32px rgba(0, 0, 0, 0.1), 0px -32px 32px rgba(0, 0, 0, 0.2)',
  control: '0px 0px 1px rgba(28, 41, 61, 0.2), 0px 2px 4px rgba(28, 41, 61, 0.12)',
};

exports.darkTheme = {
  inlineNotifications: {
    info: function info() {
      return transparent[10];
    },
    warning: function warning() {
      return transparent[10];
    },
    error: function error() {
      return transparent[10];
    },
    success: function success() {
      return transparent[10];
    },
  },

  stepper: {
    transparent: {
      default: transparent[25],
    },
  },

  numberStepper: {
    textColor: greyScale_1.greyScale.white,
  },

  input: {
    error: systemColors.error(1),
    checkmark: greyScale_1.greyScale.white,
  },

  tabs: {
    disabled: {
      accentColor: transparent[25],
    },
  },

  chip: {
    background: greyScale_1.greyScale.black,
  },

  tag: {
    background: greyScale_1.greyScale.black,
  },

  dropdownMenu: {
    background: greyScale_1.greyScale[80],
    backgroundGradient: themeUtils_1.getColor(0, '61,69,85'),
  },

  multiselect: {
    error: systemColors.error(1),
  },

  select: {
    dropdown: greyScale_1.greyScale[80],
  },

  greyScale: greyScale_1.greyScale,
  baseColors: baseColors,
  shadows: shadows,
  systemColors: systemColors,
  tooltip: {
    backgroundColor: greyScale_1.greyScale[80],
  },

  toastNotifications: greyScale_1.greyScale[80],
  transparent: transparent,
};
