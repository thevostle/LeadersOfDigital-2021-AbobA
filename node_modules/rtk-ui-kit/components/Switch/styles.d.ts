/// <reference types="react" />
export declare const StyledTouchContainer: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const StyledLabel: import("styled-components").StyledComponent<"label", any, {}, never>;
export declare const StyledSliderHoverPlace: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const StyledSlider: import("styled-components").StyledComponent<"span", any, Pick<import("./types").ISwitchProps, "className" | "disabled" | "checked"> & {
    shape: "geometric" | "rounded" | "circular";
    theme: import("../../types/theme").ITheme;
}, never>;
export declare const StyledInput: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../Base/BaseInput/types").IBaseInput & import("react").RefAttributes<HTMLInputElement>>, any, Partial<Omit<import("./types").ISwitchProps, "text" | "className" | "color" | "onChange" | "shape" | "textPosition"> & {
    color: string;
}>, never>;
export declare const StyledText: import("styled-components").StyledComponent<"span", any, Pick<import("./types").ISwitchProps, "disabled"> & {
    currentTheme: "light" | "dark";
    textPosition: "left" | "right";
    theme: import("../../types/theme").ITheme;
}, never>;
