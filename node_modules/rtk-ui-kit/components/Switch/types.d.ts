import { CSSProperties } from 'react';
import { BaseColorsType, TextHorizontalPositionsType, ShapesType } from '../../types/base';
import { ThemeNamesType, ITheme } from '../../types/theme';
export interface ISwitchProps {
    /** Задает id для элемента */
    id?: string;
    /** Устанавливает дополнительные классы для элемента */
    className?: string;
    /** Задает дополнительные стили для компонента */
    style?: CSSProperties;
    /** Задает цвет подложки для переключателя
     * @default 'primary2'
     */
    color?: BaseColorsType;
    /** Задает скругление, значение по умолчанию берется из темы */
    shape?: ShapesType;
    /** Задает значение по умолчанию */
    defaultChecked?: boolean;
    /** Устанавливает дополнительные классы для текста */
    textClassName?: string;
    /** Устанавливает дополнительные стили для текста */
    textStyle?: CSSProperties;
    /** Задает расположение текста относительно компонента
     * @default 'right'
     */
    textPosition?: TextHorizontalPositionsType;
    /** Задает значение для состояния компонента */
    checked?: boolean;
    /** Устанавливает атрибут disabled */
    disabled?: boolean;
    /** Устанавливает атрибут name */
    name?: string;
    /** Устанавливает текст возле комопонента */
    text?: string;
    /** Callback функция, вызываемая при изменении состояния
     * @param {boolean} value состояние компонента
     * @returns {undefined}
     */
    onChange?: (value: boolean) => void;
}
export declare type SwitchSliderPropsType = Pick<ISwitchProps, 'className' | 'checked' | 'disabled'> & {
    shape: ShapesType;
    theme: ITheme;
};
export declare type SwitchInputPropsType = Partial<Omit<ISwitchProps, 'className' | 'shape' | 'text' | 'textPosition' | 'onChange' | 'color'> & {
    color: string;
}>;
export declare type SwitchTextPropsType = Pick<ISwitchProps, 'disabled'> & {
    currentTheme: ThemeNamesType;
    textPosition: TextHorizontalPositionsType;
    theme: ITheme;
};
