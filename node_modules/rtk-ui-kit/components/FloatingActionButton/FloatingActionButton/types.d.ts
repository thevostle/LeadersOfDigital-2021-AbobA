import { ReactNode, ElementType, CSSProperties } from 'react';
import { BaseColorsType, ShapesType, IconPositionsType } from '../../../types/base';
import { ITheme } from '../../../types/theme';
import { IButtonBaseProps } from '../../Base/BaseButton/types';
import { OverlayViewsType } from '../../Overlay/constants';
export interface IFloatingActionButton extends Omit<IButtonBaseProps, 'type' | 'disabled' | 'id' | 'name'> {
    /** Задает основной цвет */
    color?: BaseColorsType;
    /** Задает скругление, значение по умолчанию берется из темы */
    shape?: ShapesType;
    /** Задает текст кнопки */
    text?: string;
    /** Задает иконку кнопки */
    icon?: ReactNode;
    /** Задает цвет иконки кнопки */
    iconColor?: string;
    /** Задает расположение иконки относительно текста
     *  @default "left" */
    iconPosition?: IconPositionsType;
    /** Задает пункты меню. Массив объектов
     * @param key - ключ пункта меню
     * @param text - текст пункта меню
     * @param icon - иконка пункта меню
     * @param tag - tag пункта меню. default tag - "a"
     */
    menu?: MenuItemType[];
    /** Задает тип overlay при открытом меню */
    overlayView?: OverlayViewsType;
    /** Задает дополнительные классы для компонента */
    className?: string;
    /** Задает дополнительные стили для компонента */
    style?: CSSProperties;
    /** Задает дополнительные классы для меню */
    menuClassName?: string;
    /** Задает дополнительные стили для сеню */
    menuStyle?: CSSProperties;
    /** Задает использование в Portal
     *  @default true */
    useInPortal?: boolean;
    /** Callback функция, вызываемая при клике */
    onClick?(): void;
    /** Callback функция, вызываемая при клике на Overlay */
    onClickOverlay?(): void;
}
export declare type MenuItemType = {
    key: string;
    /** Задает тег для пункта меню (React.ElementType)
     *  @default "a" */
    tag?: ElementType;
    /** Позволяет задать дополнительные параметры для пункта меню */
    [x: string]: any;
} & ({
    text?: string;
    icon: ReactNode;
} | {
    text: string;
    icon?: ReactNode;
});
export declare type StyledFloatingActionButtonType = Pick<IFloatingActionButton, 'shape' | 'text'> & {
    theme: ITheme;
    color?: string;
    $iconColor?: string;
    $isMenuOpen?: boolean;
};
