'use strict';
var PropTypes = require('prop-types');

var __assign =
  (void 0 && (void 0).__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

    return __assign.apply(this, arguments);
  };

var __rest =
  (void 0 && (void 0).__rest) ||
  function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === 'function')
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
          t[p[i]] = s[p[i]];
      }
    return t;
  };

var __importDefault =
  (void 0 && (void 0).__importDefault) ||
  function (mod) {
    return mod && mod.__esModule
      ? mod
      : {
          default: mod,
        };
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

var react_1 = __importDefault(require('react'));

var styles_1 = require('./styles');

var Container = function Container(props) {
  var id = props.id,
    className = props.className,
    noGapMobileS = props.noGapMobileS,
    style = props.style,
    children = props.children,
    restProps = __rest(props, ['id', 'className', 'noGapMobileS', 'style', 'children']);

  return react_1.default.createElement(
    styles_1.StyledContainer,
    __assign(
      {
        id: id,
        className: className,
        noGapMobileS: noGapMobileS,
        style: style,
      },
      restProps
    ),
    children
  );
};

Container.propTypes = {
  children: PropTypes.node,
  /**
   * Задает дополнительные классы для компонента
   */
  className: PropTypes.string,
  /**
   * Задает id для компонента
   */
  id: PropTypes.string,
  /**
   * Задает отступы для компонента
   *
   *  В значении true уберет отступ на разрешении mobileS
   *  @default "false"
   *  @param mobileS разрешение идет от 320px до 639px
   *
   *  Соответствует breakpoint [mobile_small] - [tablet_vertical_small]
   */
  noGapMobileS: PropTypes.bool,
  /**
   * Задает дополнительные стили для компонента
   */
  style: PropTypes.object,
};

Container.displayName = 'Container';
exports.default = Container;
