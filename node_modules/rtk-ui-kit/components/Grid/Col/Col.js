'use strict';
var PropTypes = require('prop-types');

var __assign =
  (void 0 && (void 0).__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

    return __assign.apply(this, arguments);
  };

var __rest =
  (void 0 && (void 0).__rest) ||
  function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === 'function')
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
          t[p[i]] = s[p[i]];
      }
    return t;
  };

var __importDefault =
  (void 0 && (void 0).__importDefault) ||
  function (mod) {
    return mod && mod.__esModule
      ? mod
      : {
          default: mod,
        };
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

var react_1 = __importDefault(require('react'));

var styles_1 = require('./styles');

var Col = function Col(props) {
  var id = props.id,
    className = props.className,
    style = props.style,
    mobileS = props.mobileS,
    tabletS = props.tabletS,
    tabletM = props.tabletM,
    tabletL = props.tabletL,
    desktopS = props.desktopS,
    desktopM = props.desktopM,
    offsetMobileS = props.offsetMobileS,
    offsetTabletS = props.offsetTabletS,
    offsetTabletM = props.offsetTabletM,
    offsetTabletL = props.offsetTabletL,
    offsetDesktopS = props.offsetDesktopS,
    offsetDesktopM = props.offsetDesktopM,
    children = props.children,
    restProps = __rest(props, [
      'id',
      'className',
      'style',
      'mobileS',
      'tabletS',
      'tabletM',
      'tabletL',
      'desktopS',
      'desktopM',
      'offsetMobileS',
      'offsetTabletS',
      'offsetTabletM',
      'offsetTabletL',
      'offsetDesktopS',
      'offsetDesktopM',
      'children',
    ]);

  return react_1.default.createElement(
    styles_1.StyledColSpacing,
    {
      mobileS: mobileS,
      tabletS: tabletS,
      tabletM: tabletM,
      tabletL: tabletL,
      desktopS: desktopS,
      desktopM: desktopM,
      offsetMobileS: offsetMobileS,
      offsetTabletS: offsetTabletS,
      offsetTabletM: offsetTabletM,
      offsetTabletL: offsetTabletL,
      offsetDesktopS: offsetDesktopS,
      offsetDesktopM: offsetDesktopM,
    },
    react_1.default.createElement(
      styles_1.StyledCol,
      __assign(
        {
          id: id,
          className: className,
          style: style,
        },
        restProps
      ),
      children
    )
  );
};

Col.propTypes = {
  children: PropTypes.node,
  /**
   * Задает дополнительные классы для компонента
   */
  className: PropTypes.string,
  /**
   * Задает количество колонок, на которое растянется компонент X/12.
   *  @param desktopM разрешение идет от 1512px +
   *
   *  Соответствует breakpoint [desktop_middle] +
   */
  desktopM: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  /**
   * Задает количество колонок, на которое растянется компонент X/12.
   *  @param desktopS разрешение идет от 1280px до 1511px
   *
   *  Соответствует breakpoint [desktop_small] - [desktop_middle]
   */
  desktopS: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  /**
   * Задает id для компонента
   */
  id: PropTypes.string,
  /**
   * ####Сетка работает по принципу mobile first.
   * Поэтому если на всех разрешениях нужна 1 колонка на всю ширину, достаточно указать одно разрешение mobileS={12}
   *
   * Задает количество колонок, на которое растянется компонент X/12.
   *  @param mobileS разрешение идет от 320px до 639px
   *
   *  Соответствует breakpoint [mobile_small] - [tablet_vertical_small]
   */
  mobileS: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  /**
   * Добавляет отступ слева на указанное количество колонок.
   *  @param desktopM разрешение идет от 1512px +
   *
   *  Соответствует breakpoint [desktop_middle] +
   */
  offsetDesktopM: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),
  /**
   * Добавляет отступ слева на указанное количество колонок.
   *  @param desktopS разрешение идет от 1280px до 1511px
   *
   *  Соответствует breakpoint [desktop_small] - [desktop_middle]
   */
  offsetDesktopS: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),
  /**
   * Добавляет отступ слева на указанное количество колонок.
   *  Отступ, указанный на разрешении mobileS сохраняется на всех разрешениях экрана.
   *  Для удаления отступа на более широких экранах нужно задать offset 0
   *  @param offsetMobileS разрешение идет от 320px до 639px
   *
   *  Соответствует breakpoint [mobile_small] - [tablet_vertical_small]
   */
  offsetMobileS: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),
  /**
   * Добавляет отступ слева на указанное количество колонок.
   *  @param tabletL разрешение идет от 1024px до 1279px
   *
   *  Соответствует breakpoint [tablet_horizontal] - [desktop_small]
   */
  offsetTabletL: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),
  /**
   * Добавляет отступ слева на указанное количество колонок.
   *  @param tabletM разрешение идет от 768px до 1023px
   *
   *  Соответствует breakpoint [tablet_vertical_large] - [tablet_horizontal]
   */
  offsetTabletM: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),
  /**
   * ЗДобавляет отступ слева на указанное количество колонок.
   *  @param tabletS разрешение идет от 640px до 767px
   *
   *  Соответствует breakpoint [tablet_vertical_small] - [tablet_vertical_large]
   */
  offsetTabletS: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),
  /**
   * Задает дополнительные стили для компонента
   */
  style: PropTypes.object,
  /**
   * Задает количество колонок, на которое растянется компонент X/12.
   *  @param tabletL разрешение идет от 1024px до 1279px
   *
   *  Соответствует breakpoint [tablet_horizontal] - [desktop_small]
   */
  tabletL: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  /**
   * Задает количество колонок, на которое растянется компонент X/12.
   *  @param tabletM разрешение идет от 768px до 1023px
   *
   *  Соответствует breakpoint [tablet_vertical_large] - [tablet_horizontal]
   */
  tabletM: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  /**
   * Задает количество колонок, на которое растянется компонент X/12.
   *  @param tabletS разрешение идет от 640px до 767px
   *
   *  Соответствует breakpoint [tablet_vertical_small] - [tablet_vertical_large]
   */
  tabletS: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
};

Col.displayName = 'Col';
exports.default = Col;
