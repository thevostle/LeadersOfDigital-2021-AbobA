import { CSSProperties, ReactElement } from 'react';
import { BaseColorsType, ShapesType } from '../../../types/base';
import { ITheme } from '../../../types/theme';
import { ChipViewsType } from '../constants';
export interface IChipGroup {
    /** Задает основной цвет
     *  @default "primary2" */
    color?: BaseColorsType;
    /** Задает скругление, значение по умолчанию берется из темы */
    shape?: ShapesType;
    /** Задает внешний вид
     *  @default "primary" */
    view?: ChipViewsType;
    /** Добавляет общий чип
     *  @default false */
    showChipTotal?: boolean;
    /** Добавляет текст для общего чипа */
    chipTotalLabel?: string;
    /** Список чипов. Массив объектов
     * @param key - ключ чипа
     * @param value - текст для кнопки чипа
     * @param items - массив сортируемых элементов
     */
    chips: ChipType[];
    /** Список выбранных чипов. Массив с ключами
     * @param key - ключ selected чипа
     */
    selectedChips?: string[];
    /** Список disabled чипов. Массив с ключами
     * @param key - ключ disabled чипа
     */
    disabledChips?: string[];
    /** Задает id для компонента */
    id?: string;
    /** Задает дополнительные классы для компонента */
    className?: string;
    /** Задает дополнительные стили для компонента */
    style?: CSSProperties;
    /** Задает дополнительные props для контента */
    itemsContainerProps?: any;
    /** Задает дополнительные стили для чипа */
    chipsClassName?: string;
    /** Задает дополнительные стили для чипа */
    chipsStyle?: CSSProperties;
}
export declare type ChipType = {
    key: string;
    value: string;
    contentItems: ReactElement[];
};
export declare type StyledChipGroupType = Omit<IChipGroup, 'chips' | 'children'> & {
    theme: ITheme;
};
