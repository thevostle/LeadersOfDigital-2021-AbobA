/// <reference types="react" />
export declare const StyledRoot: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledContainer: import("styled-components").StyledComponent<"div", any, Pick<import("./types").ITextareaProps, "error" | "value" | "shape" | "disabled"> & {
    theme: import("../../types/theme").ITheme;
    color?: string;
    isFocused?: boolean;
}, never>;
export declare const StyledTextarea: import("styled-components").StyledComponent<"textarea", any, Pick<import("./types").ITextareaProps, "error" | "value" | "shape" | "disabled"> & {
    theme: import("../../types/theme").ITheme;
    color?: string;
    isFocused?: boolean;
}, never>;
export declare const StyledTextareaAutosize: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("react-textarea-autosize").TextareaAutosizeProps & import("react").RefAttributes<HTMLTextAreaElement>>, any, Pick<import("./types").ITextareaProps, "error" | "value" | "shape" | "disabled"> & {
    theme: import("../../types/theme").ITheme;
    color?: string;
    isFocused?: boolean;
}, never>;
export declare const StyledLabel: import("styled-components").StyledComponent<"label", any, Pick<import("./types").ITextareaProps, "error" | "value" | "shape" | "disabled"> & {
    theme: import("../../types/theme").ITheme;
    color?: string;
    isFocused?: boolean;
}, never>;
export declare const StyledFooter: import("styled-components").StyledComponent<"div", any, Pick<import("./types").ITextareaProps, "error" | "value" | "shape" | "disabled"> & {
    theme: import("../../types/theme").ITheme;
    color?: string;
    isFocused?: boolean;
}, never>;
export declare const StyledHint: import("styled-components").StyledComponent<import("react").FC<import("../Typography/types").ITypographyProps>, any, Pick<import("./types").ITextareaProps, "error" | "value" | "shape" | "disabled"> & {
    theme: import("../../types/theme").ITheme;
    color?: string;
    isFocused?: boolean;
}, never>;
export declare const StyledTextLength: import("styled-components").StyledComponent<import("react").FC<import("../Typography/types").ITypographyProps>, any, Pick<import("./types").ITextareaProps, "error" | "value" | "shape" | "disabled"> & {
    theme: import("../../types/theme").ITheme;
    color?: string;
    isFocused?: boolean;
}, never>;
