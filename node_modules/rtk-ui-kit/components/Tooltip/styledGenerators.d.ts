import { ITooltipStyle, ITooltipTextStyle } from './types';
export declare const generateShapeTooltip: ({ shape }: ITooltipStyle) => "" | import("styled-components").FlattenSimpleInterpolation;
export declare const generateVisibility: ({ isOpen }: ITooltipStyle) => "" | import("styled-components").FlattenSimpleInterpolation;
export declare const generateMinSize: ({ closeButton }: ITooltipStyle) => "" | import("styled-components").FlattenSimpleInterpolation;
export declare const generateTextAlign: ({ textAlign }: ITooltipTextStyle) => "" | import("styled-components").FlattenSimpleInterpolation;
export declare const generateTooltipArrowLeft: ({ shape }: ITooltipStyle) => import("styled-components").FlattenSimpleInterpolation;
export declare const generateTooltipArrowRight: ({ shape }: ITooltipStyle) => import("styled-components").FlattenSimpleInterpolation;
export declare const generateTooltipArrowTop: ({ shape }: ITooltipStyle) => import("styled-components").FlattenSimpleInterpolation;
export declare const generateTooltipArrowBottom: ({ shape }: ITooltipStyle) => import("styled-components").FlattenSimpleInterpolation;
export declare const generateArrowPosition: ({ placement, theme }: ITooltipStyle) => "" | import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const generateTooltipPosition: ({ placement, shape, currentTargetRect }: ITooltipStyle) => "" | import("styled-components").FlattenSimpleInterpolation;
export declare const generateDisabledChildren: ({ hasDisabledChildren, }: {
    hasDisabledChildren: boolean;
}) => import("styled-components").FlattenSimpleInterpolation;
