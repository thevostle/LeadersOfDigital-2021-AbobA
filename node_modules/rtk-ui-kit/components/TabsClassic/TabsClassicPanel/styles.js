'use strict';

var __makeTemplateObject =
  (void 0 && (void 0).__makeTemplateObject) ||
  function (cooked, raw) {
    if (Object.defineProperty) {
      Object.defineProperty(cooked, 'raw', {
        value: raw,
      });
    } else {
      cooked.raw = raw;
    }

    return cooked;
  };

var __importDefault =
  (void 0 && (void 0).__importDefault) ||
  function (mod) {
    return mod && mod.__esModule
      ? mod
      : {
          default: mod,
        };
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

exports.StyledTTabsClassicPanel = void 0;

var styled_components_1 = __importDefault(require('styled-components'));

var themeFonts_1 = require('../../../constants/themeFonts');

var components_1 = require('../../../constants/components');

exports.StyledTTabsClassicPanel = styled_components_1.default.div(
  templateObject_1 ||
    (templateObject_1 = __makeTemplateObject(
      [
        '\n  ',
        ';\n  color: ',
        ';\n  margin-top: 12px;\n  outline: none;\n\n  @media screen and (min-width: ',
        'px) {\n    ',
        ';\n  }\n\n  @media screen and (min-width: ',
        'px) {\n    ',
        ';\n  }\n',
      ],
      [
        '\n  ',
        ';\n  color: ',
        ';\n  margin-top: 12px;\n  outline: none;\n\n  @media screen and (min-width: ',
        'px) {\n    ',
        ';\n  }\n\n  @media screen and (min-width: ',
        'px) {\n    ',
        ';\n  }\n',
      ]
    )),
  themeFonts_1.themeAdaptiveFonts[components_1.BREAKPOINTS.mobile_small].bodyL,
  function (_a) {
    var theme = _a.theme;
    return theme.transparent[100];
  },
  components_1.BREAKPOINTS.mobile_large,
  themeFonts_1.themeAdaptiveFonts[components_1.BREAKPOINTS.mobile_large].bodyL,
  components_1.BREAKPOINTS.desktop_small,
  themeFonts_1.themeAdaptiveFonts[components_1.BREAKPOINTS.desktop_small].bodyL
);
var templateObject_1;
