'use strict';
var PropTypes = require('prop-types');

var __assign =
  (void 0 && (void 0).__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

    return __assign.apply(this, arguments);
  };

var __createBinding =
  (void 0 && (void 0).__createBinding) ||
  (Object.create
    ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        Object.defineProperty(o, k2, {
          enumerable: true,
          get: function get() {
            return m[k];
          },
        });
      }
    : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });

var __setModuleDefault =
  (void 0 && (void 0).__setModuleDefault) ||
  (Object.create
    ? function (o, v) {
        Object.defineProperty(o, 'default', {
          enumerable: true,
          value: v,
        });
      }
    : function (o, v) {
        o['default'] = v;
      });

var __importStar =
  (void 0 && (void 0).__importStar) ||
  function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null)
      for (var k in mod) {
        if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
      }

    __setModuleDefault(result, mod);

    return result;
  };

var __rest =
  (void 0 && (void 0).__rest) ||
  function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === 'function')
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
          t[p[i]] = s[p[i]];
      }
    return t;
  };

var __spreadArray =
  (void 0 && (void 0).__spreadArray) ||
  function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
      to[j] = from[i];
    }

    return to;
  };

var __importDefault =
  (void 0 && (void 0).__importDefault) ||
  function (mod) {
    return mod && mod.__esModule
      ? mod
      : {
          default: mod,
        };
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

var react_1 = __importStar(require('react'));

var InputText_1 = __importDefault(require('../InputText/InputText'));

var InputEmail = react_1.forwardRef(function InputEmail(props, ref) {
  var _a = props.validationRules,
    validationRules = _a === void 0 ? [] : _a,
    _b = props.defaultValidationText,
    defaultValidationText = _b === void 0 ? 'Некорректный формат почты' : _b,
    otherProps = __rest(props, ['validationRules', 'defaultValidationText']);

  var defaulktValidationRules = [
    {
      error: defaultValidationText,
      validate: function validate(inputValue) {
        return (
          inputValue === '' ||
          /^(?!.*\.\.)(?!.*\.@)(?!.*--)(?!.*__)(?!.*-@)(?!.*_@)(?=[a-z0-9][a-z0-9._@-]{5,255}$)[a-z0-9._-]{1,}@(?:[a-z0-9](?:[a-z0-9-]{0,}[a-z0-9])?\.){1,}[a-z]{2,}$/i.test(
            inputValue
          )
        );
      },
    },
  ];

  return react_1.default.createElement(
    InputText_1.default,
    __assign({}, otherProps, {
      ref: ref,
      validationRules: __spreadArray(__spreadArray([], defaulktValidationRules), validationRules),
    })
  );
});

InputEmail.propTypes = {
  /**
   * Текст ошибки валидации
   * @default "Некорректный формат почты"
   */
  defaultValidationText: PropTypes.string,
  /**
   * Задаёт правила валидации , а также содержит в себе текст ошибки
   * @param error - текстовое значение ошибки валидации
   * @param validate - метод, валидирующий значение value
   */
  validationRules: PropTypes.arrayOf(
    PropTypes.shape({
      error: PropTypes.string,
      validate: PropTypes.func.isRequired,
    })
  ),
};

exports.default = InputEmail;
