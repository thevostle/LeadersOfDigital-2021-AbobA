'use strict';
var PropTypes = require('prop-types');

var __assign =
  (void 0 && (void 0).__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

    return __assign.apply(this, arguments);
  };

var __rest =
  (void 0 && (void 0).__rest) ||
  function (s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === 'function')
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
          t[p[i]] = s[p[i]];
      }
    return t;
  };

var __importDefault =
  (void 0 && (void 0).__importDefault) ||
  function (mod) {
    return mod && mod.__esModule
      ? mod
      : {
          default: mod,
        };
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

var react_1 = __importDefault(require('react'));

var constants_1 = require('./constants');

var styles_1 = require('./styles');

var Icon = function Icon(props) {
  var _a = props.size,
    size = _a === void 0 ? constants_1.DEFAULT_ICON_SIZE : _a,
    _b = props.viewBox,
    viewBox = _b === void 0 ? '0 0 24 24' : _b,
    children = props.children,
    restProps = __rest(props, ['size', 'viewBox', 'children']);

  return react_1.default.createElement(
    styles_1.StyledSVG,
    __assign(
      {
        width: size,
        height: size,
        viewBox: viewBox,
        'aria-hidden': 'true',
        xmlns: 'http://www.w3.org/2000/svg',
      },
      restProps
    ),
    children
  );
};

Icon.propTypes = {
  children: PropTypes.node,
  /**
   * Задает размер иконки
   *  @default 24
   */
  size: PropTypes.number,
  /**
   * Задает viewBox
   *  @default "0 0 24 24"
   */
  viewBox: PropTypes.string,
};

Icon.displayName = 'Icon';
exports.default = Icon;
