'use strict';

var __makeTemplateObject =
  (void 0 && (void 0).__makeTemplateObject) ||
  function (cooked, raw) {
    if (Object.defineProperty) {
      Object.defineProperty(cooked, 'raw', {
        value: raw,
      });
    } else {
      cooked.raw = raw;
    }

    return cooked;
  };

var __importDefault =
  (void 0 && (void 0).__importDefault) ||
  function (mod) {
    return mod && mod.__esModule
      ? mod
      : {
          default: mod,
        };
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

exports.StyledSelectInputText =
  exports.StyledSelectInput =
  exports.StyledSelect =
  exports.StyledIcon =
    void 0;

var styled_components_1 = __importDefault(require('styled-components'));

var InputText_1 = __importDefault(require('../Input/InputText/InputText'));

var styles_1 = require('../Input/styles');

exports.StyledIcon = styled_components_1.default.div(
  templateObject_1 ||
    (templateObject_1 = __makeTemplateObject(
      ['\n  display: flex;\n  transform: ', ';\n  transition: transform 300ms;\n'],
      ['\n  display: flex;\n  transform: ', ';\n  transition: transform 300ms;\n']
    )),
  function (_a) {
    var isOpen = _a.isOpen;
    return isOpen ? 'rotate(180deg)' : 'rotate(0deg)';
  }
);
exports.StyledSelect = styled_components_1.default.div(
  templateObject_2 ||
    (templateObject_2 = __makeTemplateObject(
      ['\n  display: inline-block;\n  min-width: 280px;\n'],
      ['\n  display: inline-block;\n  min-width: 280px;\n']
    ))
);
exports.StyledSelectInput = styled_components_1.default.div(
  templateObject_3 || (templateObject_3 = __makeTemplateObject([''], ['']))
);
exports.StyledSelectInputText = styled_components_1.default(InputText_1.default)(
  templateObject_4 ||
    (templateObject_4 = __makeTemplateObject(
      [
        '\n  width: 100%;\n  input {\n    caret-color: transparent;\n  }\n\n  ',
        ':hover {\n    > * {\n      cursor: pointer;\n    }\n\n    > ',
        ' svg {\n      fill: ',
        ';\n    }\n  }\n',
      ],
      [
        '\n  width: 100%;\n  input {\n    caret-color: transparent;\n  }\n\n  ',
        ':hover {\n    > * {\n      cursor: pointer;\n    }\n\n    > ',
        ' svg {\n      fill: ',
        ';\n    }\n  }\n',
      ]
    )),
  styles_1.StyledContainer,
  styles_1.StyledIconButton,
  function (_a) {
    var theme = _a.theme;
    return theme.transparent[100];
  }
);
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
