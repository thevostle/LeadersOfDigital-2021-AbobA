/// <reference types="react" />
export declare const StyledIcon: import("styled-components").StyledComponent<"div", any, {
    isOpen: boolean;
}, never>;
export declare const StyledSelect: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledSelectInput: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledSelectInputText: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<Pick<import("../Input/types").IInputProps, "label" | "style" | "type" | "name" | "className" | "color" | "onFocus" | "onBlur" | "onChange" | "onInvalid" | "error" | "value" | "defaultValue" | "isFocused" | "shape" | "disabled" | "hint" | "required" | "readOnly" | "icon" | "onClickIcon" | "titleError" | "clearable" | "validationRules" | "transformationRule" | "onInputClick" | "onInputKeyDown" | "inputControl"> & import("react").RefAttributes<HTMLInputElement>>, any, {}, never>;
