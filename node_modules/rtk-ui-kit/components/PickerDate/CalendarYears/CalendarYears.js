'use strict';
var PropTypes = require('prop-types');

var __createBinding =
  (void 0 && (void 0).__createBinding) ||
  (Object.create
    ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        Object.defineProperty(o, k2, {
          enumerable: true,
          get: function get() {
            return m[k];
          },
        });
      }
    : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });

var __setModuleDefault =
  (void 0 && (void 0).__setModuleDefault) ||
  (Object.create
    ? function (o, v) {
        Object.defineProperty(o, 'default', {
          enumerable: true,
          value: v,
        });
      }
    : function (o, v) {
        o['default'] = v;
      });

var __importStar =
  (void 0 && (void 0).__importStar) ||
  function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null)
      for (var k in mod) {
        if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
      }

    __setModuleDefault(result, mod);

    return result;
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

var react_1 = __importStar(require('react'));

var constants_1 = require('./constants');

var constants_2 = require('../constants');

var hooks_1 = require('./hooks');

var useGetBaseColorFromProps_1 = require('../../../hooks/useGetBaseColorFromProps');

var useThemeContext_1 = require('../../../hooks/useThemeContext');

var styles_1 = require('../styles');

var styles_2 = require('./styles');

var CalendarYears = function CalendarYears(props) {
  var themeConfig = useThemeContext_1.useThemeContext().themeConfig;
  var _a = props.shape,
    shape = _a === void 0 ? themeConfig.shape : _a,
    _b = props.color,
    color = _b === void 0 ? constants_2.DEFAULT_COLOR : _b,
    date = props.date,
    _c = props.minYear,
    minYear = _c === void 0 ? constants_1.MIN_YEAR : _c,
    _d = props.maxYear,
    maxYear = _d === void 0 ? constants_1.MAX_YEAR : _d,
    onSelect = props.onSelect;
  var ref = react_1.useRef(null);
  var baseColorFromProps = useGetBaseColorFromProps_1.useGetBaseColorFromProps(color);
  var years = hooks_1.useCalendarYears(ref, minYear, maxYear).years;

  var handleClick = function handleClick(year) {
    return function (e) {
      e.nativeEvent.stopImmediatePropagation();
      onSelect(year);
    };
  };

  return react_1.default.createElement(
    styles_2.StyledCalendarYears,
    null,
    react_1.default.createElement(
      styles_2.StyledCalendarYearsGrid,
      null,
      years.map(function (year) {
        return react_1.default.createElement(
          styles_1.StyledCalendarSelectebleItem,
          {
            key: year,
            ref: year === date.getFullYear() ? ref : null,
            shape: shape,
            active: year === date.getFullYear(),
            onClick: handleClick(year),
            baseColor: baseColorFromProps,
          },
          year
        );
      })
    )
  );
};

CalendarYears.propTypes = {
  color: PropTypes.oneOf(['primary1', 'primary2', 'secondary1', 'secondary2']),
  date: PropTypes.instanceOf(Date).isRequired,
  maxYear: PropTypes.number,
  minYear: PropTypes.number,
  onSelect: PropTypes.func.isRequired,
  shape: PropTypes.oneOf(['circular', 'geometric', 'rounded']),
};

CalendarYears.displayName = 'CalendarYears';
exports.default = CalendarYears;
