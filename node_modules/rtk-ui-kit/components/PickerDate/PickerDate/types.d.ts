import { CSSProperties, ReactNode } from 'react';
import { ShapesType, BaseColorsType } from '../../../types/base';
interface ITimeProps {
    /** Дает возможность выбрать период
     *  @default false */
    isRange?: boolean;
    /** Задает интвервал выбора времени в минутах
     * @default 15
     */
    interval?: number;
    /** Формат вывода времени
     * @default "HH:mm"
     */
    format?: string;
}
export interface IPickerDate {
    /** Задает скругление, значение по умолчанию берется из темы */
    shape?: ShapesType;
    /** Задает основной цвет
     *  @default "primary2" */
    color?: BaseColorsType;
    /** Значение активной даты по умолчанию */
    activeDate?: Date;
    /** Значение второй даты по умолчанию (когда isRange = true) */
    secondDate?: Date;
    /** Дает возможность выбрать период из двух дат
     *  @default false */
    isRange?: boolean;
    /** Задает индекс первого дня недели
     * @default 1 */
    firstDayIndex?: number;
    /** Задает названия дней недели
     *  @default ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'] */
    daysOfWeek?: string[];
    /** Задает названия месяцов
     *  @default [
      'Январь',
      'Февраль',
      'Март',
      'Апрель',
      'Май',
      'Июнь',
      'Июль',
      'Август',
      'Сентябрь',
      'Октябрь',
      'Ноябрь',
      'Декабрь',
    ] */
    months?: string[];
    /** Задает минимальный отображаемый год в календаре
     * @default 1980 */
    minYear?: number;
    /** Задает максимальный отображаемый год в календаре, по умолчанию текущий + 10
     * @default 2031 */
    maxYear?: number;
    /** Задает минимальную дату для выбора */
    minDate?: Date;
    /** Задает максимальную дату для выбора */
    maxDate?: Date;
    /** Задает дизейбленые даты, которые нельзя выбрать */
    disabledDates?: Date[];
    /** Добавляет возможност выбора времени PickerTime (не работает при isRange = true)
     * @default false
     */
    showTime?: boolean;
    /** Задает параметры для выбора времени
     * @param isRange - Дает возможность выбрать период из двух дат
     * @param interval - Задает интвервал выбора времени в минутах
     * @param formst - Формат вывода времени
     */
    timeProps?: ITimeProps;
    /** Callback функция, вызываемая при изменении значения
     * @param activeDate - выбранная дата
     * @param secondDate - вторая выбранная дата
     */
    onSelect?: (activeDate: Date, secondDate?: Date) => void;
    /** Задает дополнительные классы */
    className?: string;
    /** Задает дополнительные стили для компонента */
    style?: CSSProperties;
    /** Задает дополнительные классы */
    dayClassName?: string;
    /** Задает дополнительные стили для компонента */
    dayStyle?: CSSProperties;
    /** Функция, которая дает возможность кастомного вывода даты
     * @param date - дата
     */
    renderDate?: (date: Date) => ReactNode;
}
export {};
