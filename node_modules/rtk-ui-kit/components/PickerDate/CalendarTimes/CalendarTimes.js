'use strict';
var PropTypes = require('prop-types');

var __createBinding =
  (void 0 && (void 0).__createBinding) ||
  (Object.create
    ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        Object.defineProperty(o, k2, {
          enumerable: true,
          get: function get() {
            return m[k];
          },
        });
      }
    : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });

var __setModuleDefault =
  (void 0 && (void 0).__setModuleDefault) ||
  (Object.create
    ? function (o, v) {
        Object.defineProperty(o, 'default', {
          enumerable: true,
          value: v,
        });
      }
    : function (o, v) {
        o['default'] = v;
      });

var __importStar =
  (void 0 && (void 0).__importStar) ||
  function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null)
      for (var k in mod) {
        if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
      }

    __setModuleDefault(result, mod);

    return result;
  };

var __importDefault =
  (void 0 && (void 0).__importDefault) ||
  function (mod) {
    return mod && mod.__esModule
      ? mod
      : {
          default: mod,
        };
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

var react_1 = __importStar(require('react'));

var dayjs_1 = __importDefault(require('dayjs'));

var constants_1 = require('../constants');

var useGetBaseColorFromProps_1 = require('../../../hooks/useGetBaseColorFromProps');

var useThemeContext_1 = require('../../../hooks/useThemeContext');

var styles_1 = require('./styles');

var constants_2 = require('./constants');

var hooks_1 = require('./hooks');

var CalendarTimes = function CalendarTimes(props) {
  var themeConfig = useThemeContext_1.useThemeContext().themeConfig;
  var _a = props.shape,
    shape = _a === void 0 ? themeConfig.shape : _a,
    _b = props.color,
    color = _b === void 0 ? constants_1.DEFAULT_COLOR : _b,
    _c = props.format,
    format = _c === void 0 ? constants_2.DEFAULT_TIME_FORMAT : _c,
    className = props.className,
    style = props.style;
  var ref = react_1.useRef(null);
  var baseColorFromProps = useGetBaseColorFromProps_1.useGetBaseColorFromProps(color);

  var _d = hooks_1.useCalendarTimes(props, ref),
    activeValue = _d.activeValue,
    secondValue = _d.secondValue,
    times = _d.times,
    handleClick = _d.handleClick,
    handleMouseEnter = _d.handleMouseEnter,
    handeMouseLeave = _d.handeMouseLeave;

  return react_1.default.createElement(
    styles_1.StyledCalendarTimes,
    null,
    react_1.default.createElement(
      styles_1.StyledCalendarTimesGrid,
      null,
      times.map(function (_a) {
        var _b, _c, _d;

        var time = _a.time,
          status = _a.status;
        var isActiveTime =
          dayjs_1.default(time).format(format) ===
            ((_b = dayjs_1.default(activeValue)) === null || _b === void 0
              ? void 0
              : _b.format(format)) ||
          dayjs_1.default(time).format(format) ===
            ((_c = dayjs_1.default(secondValue)) === null || _c === void 0
              ? void 0
              : _c.format(format));
        return react_1.default.createElement(
          styles_1.StyledCalendarTimeItem,
          {
            key: time.toString(),
            className: className,
            style: style,
            ref:
              dayjs_1.default(time).format(format) ===
              ((_d = dayjs_1.default(activeValue)) === null || _d === void 0
                ? void 0
                : _d.format(format))
                ? ref
                : null,
            shape: shape,
            status: status,
            color: baseColorFromProps,
            onClick: handleClick(time),
            onMouseEnter: handleMouseEnter(time),
            onMouseLeave: handeMouseLeave,
          },
          isActiveTime
            ? react_1.default.createElement(
                styles_1.StyledCalendarTimeActive,
                {
                  shape: shape,
                  status: status,
                  color: baseColorFromProps,
                },
                dayjs_1.default(time).format(format)
              )
            : react_1.default.createElement(
                styles_1.StyledCalendarTimeInner,
                null,
                dayjs_1.default(time).format(format)
              )
        );
      })
    )
  );
};

CalendarTimes.propTypes = {
  className: PropTypes.string,
  color: PropTypes.oneOf(['primary1', 'primary2', 'secondary1', 'secondary2']),
  format: PropTypes.string,
  shape: PropTypes.oneOf(['circular', 'geometric', 'rounded']),
  style: PropTypes.object,
};

CalendarTimes.displayName = 'CalendarTimes';
exports.default = CalendarTimes;
