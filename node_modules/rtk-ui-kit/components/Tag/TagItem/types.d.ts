import { ReactNode, CSSProperties, MouseEvent } from 'react';
import { ITheme } from 'types/theme';
import { TagsViewsType, TagsSizesType } from '../constants';
import { ShapesType } from '../../../types/base';
export interface ITagItem {
    /** Задает внешний вид
     *  @default "primary" */
    view?: TagsViewsType;
    /** Задает размер
     *  @default "medium" */
    size?: TagsSizesType;
    /** Задает скругление, значение по умолчанию берется из темы */
    shape?: ShapesType;
    /** Устанавливает атрибут disabled */
    disabled?: boolean;
    /** Устанавливает дополнительные классы для элемента */
    className?: string;
    /** Задает дополнительные стили для компонента */
    style?: CSSProperties;
    /** Устанавливает отображение кнопки для удаления тага */
    closable?: boolean;
    /** Устанавливает ограничение по количеству символов для тага */
    maxSymbols?: number;
    /** Callback функция, вызываемая при клике на значок закрытия */
    onClick?: (event: MouseEvent<HTMLButtonElement>) => void;
    /** Текст тага */
    children: ReactNode;
}
export declare type StyledTagItemType = Omit<ITagItem, 'onClick' | 'children'> & {
    theme: ITheme;
};
