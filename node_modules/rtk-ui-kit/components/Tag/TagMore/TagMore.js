'use strict';
var PropTypes = require('prop-types');

var __importDefault =
  (void 0 && (void 0).__importDefault) ||
  function (mod) {
    return mod && mod.__esModule
      ? mod
      : {
          default: mod,
        };
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

var react_1 = __importDefault(require('react'));

var useThemeContext_1 = require('../../../hooks/useThemeContext');

var actions_1 = require('../../Icons/static16/actions');

var constants_1 = require('../constants');

var styles_1 = require('./styles');

var TagMore = function TagMore(props) {
  var themeConfig = useThemeContext_1.useThemeContext().themeConfig;
  var _a = props.size,
    size = _a === void 0 ? constants_1.TAG_SIZES.medium : _a,
    _b = props.shape,
    shape = _b === void 0 ? themeConfig.shape : _b,
    _c = props.view,
    view = _c === void 0 ? constants_1.TAG_VIEWS.primary : _c,
    className = props.className,
    style = props.style,
    onClick = props.onClick,
    children = props.children;
  var addIcon =
    size === constants_1.TAG_SIZES.small
      ? react_1.default.createElement(actions_1.AddSmall16, null)
      : react_1.default.createElement(actions_1.AddLarge16, null);
  var addButton = react_1.default.createElement(
    styles_1.StyledIcon,
    {
      className: 'tagBtn',
    },
    addIcon
  );
  return react_1.default.createElement(
    styles_1.StyledTagMore,
    {
      size: size,
      shape: shape,
      view: view,
      className: className,
      style: style,
      onClick: onClick,
    },
    react_1.default.createElement(
      styles_1.StyledText,
      {
        size: size,
      },
      children
    ),
    addButton
  );
};

TagMore.propTypes = {
  children: PropTypes.node,
  /**
   * Устанавливает дополнительные классы для элемента
   */
  className: PropTypes.string,
  onClick: PropTypes.func.isRequired,
  /**
   * Задает скругление, значение по умолчанию берется из темы
   */
  shape: PropTypes.oneOf(['circular', 'geometric', 'rounded']),
  /**
   * Задает размер
   *  @default "medium"
   */
  size: PropTypes.oneOf(['medium', 'small']),
  /**
   * Задает дополнительные стили для компонента
   */
  style: PropTypes.object,
  /**
   * Задает внешний вид
   *  @default "primary"
   */
  view: PropTypes.oneOf(['primary', 'secondary']),
};

TagMore.displayName = 'TagMore';
exports.default = TagMore;
