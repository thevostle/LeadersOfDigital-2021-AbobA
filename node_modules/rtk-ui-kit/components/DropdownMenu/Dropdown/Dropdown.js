'use strict';
var PropTypes = require('prop-types');

var __createBinding =
  (void 0 && (void 0).__createBinding) ||
  (Object.create
    ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        Object.defineProperty(o, k2, {
          enumerable: true,
          get: function get() {
            return m[k];
          },
        });
      }
    : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });

var __setModuleDefault =
  (void 0 && (void 0).__setModuleDefault) ||
  (Object.create
    ? function (o, v) {
        Object.defineProperty(o, 'default', {
          enumerable: true,
          value: v,
        });
      }
    : function (o, v) {
        o['default'] = v;
      });

var __importStar =
  (void 0 && (void 0).__importStar) ||
  function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null)
      for (var k in mod) {
        if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
      }

    __setModuleDefault(result, mod);

    return result;
  };

var __importDefault =
  (void 0 && (void 0).__importDefault) ||
  function (mod) {
    return mod && mod.__esModule
      ? mod
      : {
          default: mod,
        };
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

var react_1 = __importStar(require('react'));

var useOutsideClick_1 = __importDefault(require('../../../hooks/useOutsideClick'));

var useThemeContext_1 = require('../../../hooks/useThemeContext');

var function_1 = require('../../../utils/function');

var styles_1 = require('./styles');

var Dropdown = function Dropdown(props) {
  var themeConfig = useThemeContext_1.useThemeContext().themeConfig;
  var _a = props.shape,
    shape = _a === void 0 ? themeConfig.shape : _a,
    _b = props.isOpen,
    isOpen = _b === void 0 ? false : _b,
    _c = props.isFitContent,
    isFitContent = _c === void 0 ? false : _c,
    className = props.className,
    style = props.style,
    children = props.children,
    _d = props.onClose,
    onClose = _d === void 0 ? function_1.noop : _d,
    _e = props.overlay,
    overlay = _e === void 0 ? null : _e;
  var ref = react_1.useRef();
  useOutsideClick_1.default(ref, function () {
    onClose();
  });
  return isOpen
    ? react_1.default.createElement(
        styles_1.StyledDropdownRoot,
        {
          className: className,
          style: style,
        },
        overlay,
        react_1.default.createElement(
          styles_1.StyledDropdown,
          {
            ref: ref,
            shape: shape,
            isFitContent: isFitContent,
          },
          children
        )
      )
    : overlay;
};

Dropdown.propTypes = {
  children: PropTypes.node,
  /**
   * Устанавливает дополнительные классы для элемента
   */
  className: PropTypes.string,
  /**
   * По умолчанию меню растягивается по ширине родителя
   *
   *  В значении true меню растягивается по контенту, max-width: 280px
   *  @default false
   */
  isFitContent: PropTypes.bool,
  /**
   * Устанавливает показывать ли  Dropdown
   *  @default false
   */
  isOpen: PropTypes.bool.isRequired,
  /**
   * Callback функция, вызываемая при закрытии выпадающего списка
   */
  onClose: PropTypes.func,
  /**
   * Элемент относительно которого будет позиционироваться Dropdown
   */
  overlay: PropTypes.element,
  /**
   * Задает скругление, значение по умолчанию берется из темы
   */
  shape: PropTypes.oneOf(['circular', 'geometric', 'rounded']),
  /**
   * Задает дополнительные стили для компонента
   */
  style: PropTypes.object,
};

Dropdown.displayName = 'Dropdown';
exports.default = Dropdown;
