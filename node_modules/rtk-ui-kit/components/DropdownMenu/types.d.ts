import { ReactNode, RefObject, CSSProperties, ReactElement } from 'react';
import { BaseColorsType, ShapesType } from '../../types/base';
export interface IDropdownMenuItem {
    value: ReactNode;
    key: number | string;
    hint?: string;
    icon?: ReactNode;
}
export interface IDropdownMenuProps {
    /** Задает основной цвет выбранного элемента
     *  @default "primary2" */
    color?: BaseColorsType;
    /** Задает скругление, значение по умолчанию берется из темы */
    shape?: ShapesType;
    /** Отображает подсказку для выпадающего списка */
    title?: string;
    /** Задает список элементов для выбора
     * @param value - отображаемое значение
     * @param key - уникальный ключ в разрезе списка элементов
     * @param hint - дополнительная подпись
     * @param icon - иконка
     */
    options: IDropdownMenuItem[];
    /** Задает выбранный элемент по умолчанию */
    defaultValue?: IDropdownMenuItem['key'];
    /** Устанавливает дополнительные классы для элемента */
    className?: string;
    /** Задает дополнительные стили для компонента */
    style?: CSSProperties;
    /** Устанавливает дополнительные классы для элементов меню */
    itemClassName?: string;
    /** Задает дополнительные стили для элементов меню */
    itemStyle?: CSSProperties;
    /** Задает признак скрывания при выборе элемента
     *  @default true */
    hideOnSelect?: boolean;
    /** Задает ref на элемент, относительно которого выпадающий список растягивается и позиционируется.
     * Дефолтные значения размеров - max-width: 280px; max-height: 256px */
    stickyRef?: RefObject<HTMLElement>;
    /** По умолчанию меню растягивается по ширине родителя
     *
     *  В значении true меню растягивается по контенту, max-width: 280px
     *  @default false */
    isFitContent?: boolean;
    /** Callback функция, вызываемая при выборе значения из списка
     * @param value - ключ выбранного значения из списка
     */
    onSelect?: (value: IDropdownMenuItem['key']) => void;
    /** Callback функция, вызываемая при закрытии выпадающего списка */
    onClose?: () => void;
    /** Задает элемент, от которого будет позиционирован дропдаун */
    children?: ReactElement;
}
export declare type StyledDropdownMenuType = Pick<IDropdownMenuProps, 'shape' | 'isFitContent'> & {
    color?: string;
    textColor?: string;
    isOffset?: boolean;
};
