import { ElementType, CSSProperties } from 'react';
import { SpacingVerticalKeysType, SpacingFullKeysType } from '../../types/spacing';
import { TYPOGRAPHY_VARIANTS, TYPOGRAPHY_COLORS } from '../../constants/components';
export declare type TypographyVariantsType = keyof typeof TYPOGRAPHY_VARIANTS;
export declare type TypographyColorsType = keyof typeof TYPOGRAPHY_COLORS;
export interface ITypographyProps {
    /** Задает цвет для компонента
     *  @default "main" */
    color?: TypographyColorsType;
    /** Задает вариант типографики, от которого зависит размер шрифта */
    variant: TypographyVariantsType;
    /** Задает дополнительные классы для компонента */
    className?: string;
    /** Задает дополнительные стили для компонента */
    style?: CSSProperties;
    /** В значении false - типографика адаптивна. В значении true - статична, используется desktop вариант
     *  @default false */
    isStatic?: boolean;
    /** Задает тег для типографики (React.ElementType)
     *  @default "p" */
    tag?: ElementType;
    /** Задает внутренний отступ
     * @param s 12px
     * @param m 16px
     * @param l 32px
     * @param xl 64px
     */
    spacing?: SpacingFullKeysType;
    /** Задает внешний отступ сверху
     * @param xs - 8px
     * @param s - 12px
     * @param m - 20px
     * @param l - 32px
     * @param xl - 40px
     * @param xxl - 48px
     * @param xxxl - 56px
     */
    spacingTop?: SpacingVerticalKeysType;
    /** Задает внешний отступ снизу
     * @param xs - 8px
     * @param s - 12px
     * @param m - 20px
     * @param l - 32px
     * @param xl - 40px
     * @param xxl - 48px
     * @param xxxl - 56px
     */
    spacingBottom?: SpacingVerticalKeysType;
}
export declare type StyledTypographyPropsType = Omit<ITypographyProps, 'color'> & {
    color: string;
};
