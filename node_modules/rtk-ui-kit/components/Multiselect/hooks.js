'use strict';

var __createBinding =
  (void 0 && (void 0).__createBinding) ||
  (Object.create
    ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        Object.defineProperty(o, k2, {
          enumerable: true,
          get: function get() {
            return m[k];
          },
        });
      }
    : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });

var __setModuleDefault =
  (void 0 && (void 0).__setModuleDefault) ||
  (Object.create
    ? function (o, v) {
        Object.defineProperty(o, 'default', {
          enumerable: true,
          value: v,
        });
      }
    : function (o, v) {
        o['default'] = v;
      });

var __importStar =
  (void 0 && (void 0).__importStar) ||
  function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null)
      for (var k in mod) {
        if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
      }

    __setModuleDefault(result, mod);

    return result;
  };

var __importDefault =
  (void 0 && (void 0).__importDefault) ||
  function (mod) {
    return mod && mod.__esModule
      ? mod
      : {
          default: mod,
        };
  };

Object.defineProperty(exports, '__esModule', {
  value: true,
});

exports.useMultiselect = exports.useIsMount = void 0;

var react_1 = __importStar(require('react'));

var IconStatic16_1 = __importDefault(require('../Icons/IconStatic16'));

var calcOptions = function calcOptions(opts, valueToSet) {
  return opts.map(function (_a) {
    var key = _a.key,
      value = _a.value,
      hint = _a.hint;
    return {
      key: key,
      value: value,
      hint: hint,
      isSelected: !!(valueToSet === null || valueToSet === void 0
        ? void 0
        : valueToSet.some(function (val) {
            return val.key === key;
          })),
    };
  });
};

var useIsMount = function useIsMount() {
  var isMountRef = react_1.useRef(true);
  react_1.useEffect(function () {
    isMountRef.current = false;
  }, []);
  return isMountRef.current;
};

exports.useIsMount = useIsMount;

var useMultiselect = function useMultiselect(inputOptions, checkIcon, defaultValue) {
  var _a = react_1.useState(calcOptions(inputOptions, defaultValue)),
    options = _a[0],
    setOptions = _a[1];

  var updateMultiselectInputs = function updateMultiselectInputs(changedOptions, valueToSet) {
    setOptions(calcOptions(changedOptions, valueToSet));
  };

  var selectedOptions = react_1.useMemo(
    function () {
      return options
        .filter(function (option) {
          return option.isSelected;
        })
        .map(function (_a) {
          var key = _a.key,
            value = _a.value;
          return {
            key: key,
            value: value,
          };
        });
    },
    [options]
  );
  var dropdownItems = options.map(function (_a) {
    var key = _a.key,
      value = _a.value,
      hint = _a.hint,
      isSelected = _a.isSelected;
    return {
      key: key,
      value: value,
      hint: hint,
      icon: isSelected ? checkIcon : react_1.default.createElement(IconStatic16_1.default, null),
    };
  });
  return {
    options: options,
    dropdownItems: dropdownItems,
    selectedOptions: selectedOptions,
    updateOptions: setOptions,
    updateMultiselectInputs: updateMultiselectInputs,
  };
};

exports.useMultiselect = useMultiselect;
