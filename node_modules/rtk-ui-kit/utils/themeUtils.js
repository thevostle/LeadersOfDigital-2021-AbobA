'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true,
});

exports.generateThemeTransition =
  exports.getThemedBaseColors =
  exports.getThemedSystemColors =
  exports.defaultAlpha =
  exports.getColor =
    void 0;

var components_1 = require('../constants/components');

var getColor = function getColor(alpha, color) {
  return 'rgba(' + color + ',' + alpha + ')';
};

exports.getColor = getColor;
exports.defaultAlpha = 1;

var getThemedSystemColors = function getThemedSystemColors(type, theme, alpha) {
  var opacity = alpha || exports.defaultAlpha;

  switch (type) {
    case components_1.SYSTEM_COLORS.error:
      return theme.systemColors.error(opacity);

    case components_1.SYSTEM_COLORS.info:
      return theme.systemColors.info(opacity);

    case components_1.SYSTEM_COLORS.success:
      return theme.systemColors.success(opacity);

    case components_1.SYSTEM_COLORS.warning:
      return theme.systemColors.warning(opacity);

    default:
      return '';
  }
};

exports.getThemedSystemColors = getThemedSystemColors;

var getThemedBaseColors = function getThemedBaseColors(color, theme, alpha) {
  var opacity = alpha || exports.defaultAlpha;

  switch (color) {
    case components_1.BASE_COLORS.primary1:
      return theme.baseColors.primary1(opacity);

    case components_1.BASE_COLORS.primary2:
      return theme.baseColors.primary2(opacity);

    case components_1.BASE_COLORS.secondary1:
      return theme.baseColors.secondary1(opacity);

    case components_1.BASE_COLORS.secondary2:
      return theme.baseColors.secondary2(opacity);

    default:
      return '';
  }
};

exports.getThemedBaseColors = getThemedBaseColors;

var generateThemeTransition = function generateThemeTransition(types, themeTransition) {
  if (types === void 0) {
    types = [];
  }

  var transition = 'transition: ';
  types.forEach(function (type, index) {
    transition += type + ' ' + themeTransition;

    if (index !== types.length - 1) {
      transition += ', ';
    } else {
      transition += ';';
    }
  });
  return transition;
};

exports.generateThemeTransition = generateThemeTransition;
