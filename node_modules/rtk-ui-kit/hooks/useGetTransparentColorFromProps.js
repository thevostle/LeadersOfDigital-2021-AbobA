'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true,
});

exports.useGetTransparentColorFromProps = void 0;

var react_1 = require('react');

var components_1 = require('../constants/components');

var useThemeContext_1 = require('./useThemeContext');

var useGetTransparentColorFromProps = function useGetTransparentColorFromProps(
  color,
  opacityPercent
) {
  var _a = useThemeContext_1.useThemeContext(),
    themeName = _a.themeName,
    themeConfig = _a.themeConfig;

  var opacityMap = {
    5: 0.05,
    10: 0.1,
  };

  var transparentColor = color;
  var colorOpacity = opacityMap[opacityPercent];
  var darkThemeColorOpacity = opacityPercent;

  if (themeName === components_1.THEMES.dark) {
    transparentColor = 'white';
  }

  var transparentColors = react_1.useMemo(
    function () {
      var _a;

      return (
        (_a = {}),
        (_a[components_1.TRANSPARENT_COLORS.primary1] =
          themeConfig.baseColors.primary1(colorOpacity)),
        (_a[components_1.TRANSPARENT_COLORS.primary2] =
          themeConfig.baseColors.primary2(colorOpacity)),
        (_a[components_1.TRANSPARENT_COLORS.secondary1] =
          themeConfig.baseColors.secondary1(colorOpacity)),
        (_a[components_1.TRANSPARENT_COLORS.secondary2] =
          themeConfig.baseColors.secondary2(colorOpacity)),
        (_a[components_1.TRANSPARENT_COLORS.success] =
          themeConfig.systemColors.success(colorOpacity)),
        (_a[components_1.TRANSPARENT_COLORS.info] = themeConfig.systemColors.info(colorOpacity)),
        (_a[components_1.TRANSPARENT_COLORS.warning] =
          themeConfig.systemColors.warning(colorOpacity)),
        (_a[components_1.TRANSPARENT_COLORS.error] = themeConfig.systemColors.error(colorOpacity)),
        (_a.white = themeConfig.transparent[darkThemeColorOpacity]),
        _a
      );
    },
    [themeConfig, colorOpacity, darkThemeColorOpacity]
  );
  return color ? transparentColors[transparentColor] : '';
};

exports.useGetTransparentColorFromProps = useGetTransparentColorFromProps;
